<Window x:Class="FilmManager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FilmManager"
        xmlns:vm="clr-namespace:FilmManager.ViewModels"
        xmlns:matcol="clr-namespace:MaterialDesignColors;assembly=MaterialDesignColors"
        xmlns:mat="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:matprog="clr-namespace:MaterialDesignThemes.Wpf.Converters.CircularProgressBar;assembly=MaterialDesignThemes.Wpf"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{StaticResource MaterialDesignFont}"
        mc:Ignorable="d"
        Title="MainWindow" Height="350" Width="525" Loaded="Window_Loaded"
        >
    <!--<Window.Style>
        <Style TargetType="Window" BasedOn="{StaticResource {x:Type Window}}">
            <Setter Property="IsHitTestVisible" Value="True"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding DataLoading}" Value="True">
                    <Setter Property="IsHitTestVisible" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>-->
    <Window.Resources>
        <local:InverseBoolConverter x:Key="InverseBoolConverter"/>
        <Style TargetType="Button" x:Key="FuncButton" BasedOn="{StaticResource {x:Type Button}}">
            <!--<Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="Foreground" Value="#FF787878"/>-->
            <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"/>
            <Setter Property="mat:ShadowAssist.ShadowDepth" Value="Depth0"/>
            <Setter Property="Padding" Value="3"/>
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>
    <Window.IsHitTestVisible>
        <Binding Path="DataLoading" Converter="{StaticResource InverseBoolConverter}"/>
    </Window.IsHitTestVisible>
    <Grid>
        
        <DockPanel>
            <StackPanel DockPanel.Dock="Top">
                <ItemsControl ItemsSource="{Binding Filters}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel IsItemsHost="True"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <mat:Card Margin="5" Padding="10">
                                <StackPanel Orientation="Vertical" Width="130">
                                    <TextBlock Text="{Binding FilterText}" HorizontalAlignment="Center" FontWeight="Bold"/>
                                    <ComboBox ItemsSource="{Binding}" SelectedValue="{Binding SelectedValue}" DisplayMemberPath="Text" SelectedValuePath="Value">
                                    </ComboBox>
                                </StackPanel>
                            </mat:Card>

                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <DockPanel>
                    <DockPanel.Resources>
                        <Style TargetType="Button" BasedOn="{StaticResource FuncButton}"/>
                    </DockPanel.Resources>
                    <mat:Card DockPanel.Dock="Right" Margin="5">
                        <StackPanel Orientation="Horizontal">
                            <Button Command="{Binding RefreshCommand}">
                                <mat:PackIcon Kind="Refresh" VerticalAlignment="Stretch" Width="24" Height="24"/>
                            </Button>
                            <Button Command="{Binding ClearFiltersCommand}">
                                <mat:PackIcon Kind="FilterRemove" VerticalAlignment="Stretch" Width="24" Height="24"/>
                            </Button>
                        </StackPanel>
                    </mat:Card>
                    <mat:Card Margin="5">
                        <DockPanel>
                            <Button Command="{Binding SearchCommand}">
                                <mat:PackIcon Kind="Magnify" VerticalAlignment="Stretch" Width="24" Height="24"/>
                            </Button>
                            <TextBox Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" Name="searchBox" VerticalAlignment="Center" Margin="3,0"/>

                        </DockPanel>

                    </mat:Card>
                </DockPanel>

                
            </StackPanel>

            <!--<WrapPanel DockPanel.Dock="Top">
                <WrapPanel.Resources>
                    <Style TargetType="HeaderedContentControl">
                        <Setter Property="HeaderTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                               HorizontalAlignment="Center"/>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Width" Value="130"/>
                        <Setter Property="Margin" Value="10"/>
                    </Style>
                </WrapPanel.Resources>
                <HeaderedContentControl Header="Жанр">
                    <ComboBox  ItemsSource="{Binding UsedGenres}" SelectedValuePath="GenreId" DisplayMemberPath="Name"/>
                </HeaderedContentControl>
                
                --><!--<local:FilterComboBox Header="Жанр" ItemsSource="{Binding UsedGenres}" SelectedValuePath="GenreId" DisplayMemberPath="Name"/>
                <local:FilterComboBox Header="Год"/>
                <local:FilterComboBox Header="Рейтинг"/>
                <local:FilterComboBox Header="Нравится"/>--><!--
            </WrapPanel>-->
            <mat:Card Margin="5" DockPanel.Dock="Bottom" Padding="5">
                <WrapPanel>
                    <ComboBox SelectedItem="{Binding ItemsPerPage}" Width="50" Margin="0,0,10,0">
                        <sys:Int32>1</sys:Int32>
                        <sys:Int32>5</sys:Int32>
                        <sys:Int32>15</sys:Int32>
                        <sys:Int32>25</sys:Int32>
                        <sys:Int32>50</sys:Int32>
                    </ComboBox>
                    <local:PageCounter PagesCount="{Binding TotalPages}" CurrentPage="{Binding CurrentPage}"/>
                </WrapPanel>
            </mat:Card>

            <DataGrid ItemsSource="{Binding Films}" AutoGenerateColumns="False" CanUserAddRows="False" 
                      CanUserDeleteRows="False" IsReadOnly="True">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Оригинальное название" Binding="{Binding OriginalName}"/>
                    <DataGridTextColumn Header="Русское название" Binding="{Binding LocalName}"/>
                    <DataGridTextColumn Header="Год" Binding="{Binding Year}"/>
                    <DataGridTemplateColumn Header="Жанр" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ItemsControl ItemsSource="{Binding Genres}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock>
                                            <Run Text="{Binding Name}"/>;
                                            </TextBlock>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Описание" Binding="{Binding Description}"/>
                    <DataGridTemplateColumn Header="Нравится">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <mat:RatingBar Value="{Binding SelfRating, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <!--<mat:RatingBar Value="2" />-->
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>


        </DockPanel>
        <Border Background="Gray" Opacity="0.5" d:DataContext="">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DataLoading}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>
    </Grid>
</Window>
