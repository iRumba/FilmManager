<Window x:Class="FilmManager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FilmManager"
        xmlns:vm="clr-namespace:FilmManager.ViewModels"
        xmlns:matcol="clr-namespace:MaterialDesignColors;assembly=MaterialDesignColors"
        xmlns:mat="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:matprog="clr-namespace:MaterialDesignThemes.Wpf.Converters.CircularProgressBar;assembly=MaterialDesignThemes.Wpf"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{StaticResource MaterialDesignFont}"
        mc:Ignorable="d"
        MinWidth="500" Width="1200"
        MinHeight="400" Height="600"
        Title="MainWindow" Loaded="Window_Loaded"
        Name="wnd">
    <Window.Resources>
        <local:InverseBoolConverter x:Key="InverseBoolConverter"/>
        <local:ValidUrlToVisibilityConverter x:Key="ValidUrlToVisibilityConverter"/>
        <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

        <BitmapImage x:Key="MissingImage" UriSource="Resources/image-missing.png"/>
        <BitmapImage x:Key="ImageLoaded" UriSource="Resources/clock.png"/>
        <BitmapImage x:Key="LoadingImage" UriSource="Resources/loading.png"/>

        <Style TargetType="Button" x:Key="FuncButton" BasedOn="{StaticResource {x:Type Button}}">
            <!--<Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="Foreground" Value="#FF787878"/>-->
            <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"/>
            <Setter Property="mat:ShadowAssist.ShadowDepth" Value="Depth0"/>
            <Setter Property="Padding" Value="3"/>
        </Style>

        <Style x:Key="AnimationImageStyle" TargetType="{x:Type Image}">
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <RotateTransform x:Name="rotateTransform"/>
                    
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsVisible}" 
                         Value="True">

                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard Timeline.DesiredFrameRate="8">
                                <DoubleAnimation By="45" To="360" IsAdditive="True" Storyboard.TargetProperty="RenderTransform.Angle" 
                                                     Duration="0:0:1" RepeatBehavior="Forever">
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>
    <Window.IsHitTestVisible>
        <Binding Path="DataLoading" Converter="{StaticResource InverseBoolConverter}"/>
    </Window.IsHitTestVisible>
    <Grid>
        
        <DockPanel>
            <StackPanel DockPanel.Dock="Top">
                <ItemsControl ItemsSource="{Binding Filters}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel IsItemsHost="True"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <mat:Card Margin="5" Padding="10">
                                <StackPanel Orientation="Vertical" Width="130">
                                    <TextBlock Text="{Binding FilterText}" HorizontalAlignment="Center" FontWeight="Bold"/>
                                    <ComboBox SelectedItem="{Binding SelectedItem}" IsSynchronizedWithCurrentItem="True"
                                        ItemsSource="{Binding}" DisplayMemberPath="Text" SelectedValuePath="Value" SelectionChanged="ComboBox_SelectionChanged"/>
                                </StackPanel>
                            </mat:Card>

                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <DockPanel>
                    <DockPanel.Resources>
                        <Style TargetType="Button" BasedOn="{StaticResource FuncButton}"/>
                    </DockPanel.Resources>
                    <mat:Card DockPanel.Dock="Right" Margin="5">
                        <StackPanel Orientation="Horizontal">
                            <Button Command="{Binding NewFilmCommand}">
                                <mat:PackIcon Kind="Plus" VerticalAlignment="Stretch" Width="24" Height="24"/>
                            </Button>
                            <Button Command="{Binding EditFilmCommand}" CommandParameter="{Binding SelectedFilm}" >
                                <mat:PackIcon Kind="LeadPencil" VerticalAlignment="Stretch" Width="24" Height="24"/>
                            </Button>
                        </StackPanel>
                    </mat:Card>
                    <mat:Card DockPanel.Dock="Right" Margin="5">
                        <StackPanel Orientation="Horizontal">
                            <Button Command="{Binding RefreshCommand}">
                                <mat:PackIcon Kind="Refresh" VerticalAlignment="Stretch" Width="24" Height="24"/>
                            </Button>
                            <Button Command="{Binding ClearFiltersCommand}">
                                <mat:PackIcon Kind="FilterRemove" VerticalAlignment="Stretch" Width="24" Height="24"/>
                            </Button>
                        </StackPanel>
                    </mat:Card>
                    <mat:Card Margin="5">
                        <DockPanel>
                            <Button Command="{Binding RefreshCommand}">
                                <mat:PackIcon Kind="Magnify" VerticalAlignment="Stretch" Width="24" Height="24"/>
                            </Button>
                            <TextBox Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" 
                                     Name="searchBox" VerticalAlignment="Center" Margin="3,0">
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Return" Command="{Binding RefreshCommand}"/>
                                </TextBox.InputBindings>
                            </TextBox>
                        </DockPanel>
                    </mat:Card>
                </DockPanel>
            </StackPanel>
            
            <mat:Card Margin="5" DockPanel.Dock="Bottom" Padding="5">
                <WrapPanel>
                    <ComboBox SelectedItem="{Binding ItemsPerPage}" Width="50" Margin="0,0,10,0">
                        <sys:Int32>1</sys:Int32>
                        <sys:Int32>5</sys:Int32>
                        <sys:Int32>15</sys:Int32>
                        <sys:Int32>25</sys:Int32>
                        <sys:Int32>50</sys:Int32>
                    </ComboBox>
                    <local:PageCounter PagesCount="{Binding TotalPages}" CurrentPage="{Binding CurrentPage}"/>
                </WrapPanel>
            </mat:Card>

            <DataGrid ItemsSource="{Binding Films}" AutoGenerateColumns="False" CanUserAddRows="False" 
                      CanUserDeleteRows="False" IsReadOnly="True" SelectedItem="{Binding SelectedFilm}"
                      SelectionMode="Single">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Оригинальное название" Binding="{Binding OriginalName}"/>
                    <DataGridTextColumn Header="Русское название" Binding="{Binding LocalName}"/>
                    <DataGridTextColumn Header="Год" Binding="{Binding Year}"/>
                    <DataGridTemplateColumn Header="Жанр" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ItemsControl ItemsSource="{Binding Genres}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock>
                                            <Run Text="{Binding Name}"/>;
                                            </TextBlock>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Описание" MaxWidth="150" ToolTipService.ToolTip="{Binding Description}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Description}">
                                    <TextBlock.ToolTip>
                                        <TextBlock Text="{Binding Description}" MaxWidth="500" TextWrapping="Wrap"/>
                                    </TextBlock.ToolTip>
                                </TextBlock>
                                <!--<mat:RatingBar Value="2" />-->
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Нравится">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <mat:RatingBar Value="{Binding SelfRating, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <!--<mat:RatingBar Value="2" />-->
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Рейтинг" Binding="{Binding GlobalRating, TargetNullValue='Не известен'}" MaxWidth="150"/>
                    <DataGridTemplateColumn Header="Постер">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Visibility="{Binding PosterUrl, Converter={StaticResource ValidUrlToVisibilityConverter}}"
                                        Command="{Binding DataContext.ShowImageCommand, ElementName=wnd}" CommandParameter="{Binding PosterUrl}">
                                    <mat:PackIcon Kind="TooltipImage" Width="24" Height="24">
                                    </mat:PackIcon>
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Действия">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Button Command="{Binding DataContext.EditFilmCommand, ElementName=wnd}" CommandParameter="{Binding}" >
                                        <mat:PackIcon Kind="LeadPencil" VerticalAlignment="Stretch" Width="24" Height="24"/>
                                    </Button>
                                    <Button Command="{Binding DataContext.RemoveFilmCommand, ElementName=wnd}" CommandParameter="{Binding}" >
                                        <mat:PackIcon Kind="Delete" VerticalAlignment="Stretch" Width="24" Height="24"/>
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>


        </DockPanel>
        <Border Background="#7F808080" DataContext="{Binding ImageSource}">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsOpened}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Grid MaxWidth="{Binding ActualWidth, ElementName=wnd}" 
                  MaxHeight="{Binding ActualHeight, ElementName=wnd}">
                <DockPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                    <DockPanel Background="White" DockPanel.Dock="Top">
                        <Button DockPanel.Dock="Right" Padding="0" Margin="1"
                                Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                Command="{Binding DataContext.HideImageCommand, ElementName=wnd}">
                            <mat:PackIcon Kind="Close" Width="24" Height="24"/>
                        </Button>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Text}"/>
                    </DockPanel>
                    <Grid Background="White">
                        <TextBlock Padding="20" Text="Загрузка..."/>
                        <Image Stretch="Uniform" Source="{Binding Source, IsAsync=True}" StretchDirection="DownOnly"/>
                        <Image Source="{StaticResource ImageLoaded}" Stretch="None"
                               Visibility="{Binding Loading,Converter={StaticResource BoolToVisibilityConverter}}"/>
                        <Image Source="{StaticResource MissingImage}" Stretch="None"
                               Visibility="{Binding LoadingError, Converter={StaticResource BoolToVisibilityConverter}}"/>
                    </Grid>
                </DockPanel>
            </Grid>
        </Border>
        <Border Background="#7F808080" d:DataContext="">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DataLoading}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Image VerticalAlignment="Center" HorizontalAlignment="Center" Source="{StaticResource LoadingImage}" 
                       Stretch="None" RenderTransformOrigin="0.5,0.5" Style="{StaticResource AnimationImageStyle}">
            </Image>
        </Border>
    </Grid>
</Window>
